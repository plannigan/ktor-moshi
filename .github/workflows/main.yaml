name: CI

# Workflow does NOT trigger on a feature branch until a pull request is created.
# Workflow will always run when a pull request is merged to the default branch.
on:
  pull_request: {}
  push:
    branches: ["main"]
env:
  JAVA_VERSION: "8"
  JAVA_DISTRIBUTION: "temurin"

jobs:
  check-core:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Set up Java
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Set up Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2

      - name: Check
        run: "gradle core:check"

      - name: Publish coverage results to Codecov
        uses: codecov/codecov-action@894ff025c7b54547a9a2a1e9f228beae737ad3c2 # v3.1.3
        with:
          file: core/build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Upload test results artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: test-results
          path: core/build/test-results/test
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Upload coverage results artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: test-coverage
          path: core/build/reports/jacoco/test/jacocoTestReport.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  build-core:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Set up Java
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Set up Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2

      - name: Build
        run: gradle assemble

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Run Integration Test
        run: docker-compose run sample-client-check
